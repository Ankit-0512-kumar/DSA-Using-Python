// PASTE THESE 2 FUNCTIONS in video_view.c (replace their old versions)

void update_video(AppWidgets *widgets) {
    // Ye function "Load Once" logic ka istemal karta hai, jo sabse stable hai.
    static gboolean is_video_initialized = FALSE;
    int i = 0;

    if (is_video_initialized) {
        return;
    }

    if (!GTK_IS_WIDGET(widgets->video_areas[i])) {
        widgets->video_areas[i] = gtk_drawing_area_new();
        gtk_stack_add_named(GTK_STACK(widgets->stack), widgets->video_areas[i], "view_video");
        g_signal_connect(widgets->video_areas[i], "realize", G_CALLBACK(realize_cb), GINT_TO_POINTER(i));
        g_object_set_data(G_OBJECT(widgets->video_areas[i]), "appwidgets", widgets);
    }
    
    // Ye global VIDEO_FILES se paath lega, jo g_video se aata hai.
    if (VIDEO_FILES[i] == NULL || strlen(VIDEO_FILES[i]) == 0 || !g_file_test(VIDEO_FILES[i], G_FILE_TEST_IS_REGULAR)) {
        return;
    }
    
    printf("First valid video path received. Initializing GStreamer: %s\n", VIDEO_FILES[i]);

    if (widgets->playbins[i] == NULL) {
        widgets->playbins[i] = gst_element_factory_make("playbin", NULL);
        GstBus *bus = gst_element_get_bus(widgets->playbins[i]);
        gst_bus_add_watch(bus, bus_call, widgets);
        gst_object_unref(bus);
    }

    gchar *uri = g_filename_to_uri(VIDEO_FILES[i], NULL, NULL);
    if (uri) {
        g_object_set(widgets->playbins[i], "uri", uri, NULL);
        g_free(uri);
        gst_element_set_state(widgets->playbins[i], GST_STATE_READY);
        is_video_initialized = TRUE;
    }
}

void update_images(AppWidgets *widgets) {
    // Ye function bhi global IMAGE_FILES se paath lega.
    int i = 0; 
    GtkWidget *parent = widgets->image_areas[i] ? gtk_widget_get_parent(widgets->image_areas[i]) : NULL;
    
    if (!parent) {
        widgets->image_areas[i] = gtk_image_new();
        GtkWidget *aspect_frame = gtk_aspect_frame_new(NULL, 0.5, 0.5, 1.0, TRUE);
        gtk_container_add(GTK_CONTAINER(aspect_frame), widgets->image_areas[i]);
        gtk_stack_add_named(GTK_STACK(widgets->stack), aspect_frame, "view_image");
    }
    
    if (IMAGE_FILES[i] == NULL || strlen(IMAGE_FILES[i]) == 0 || !g_file_test(IMAGE_FILES[i], G_FILE_TEST_EXISTS)) {
        if (IMAGE_FILES[i] && strlen(IMAGE_FILES[i]) > 0) {
             g_warning("Image file does not exist: %s", IMAGE_FILES[i]);
        }
        gtk_image_clear(GTK_IMAGE(widgets->image_areas[i]));
        return;
    }

    gtk_image_set_from_file(GTK_IMAGE(widgets->image_areas[i]), IMAGE_FILES[i]);
    printf("Successfully loaded image: %s\n", IMAGE_FILES[i]);
}